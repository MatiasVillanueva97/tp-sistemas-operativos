[INFO] 03:42:00:323 Kernel/(6091:6094): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 03:42:00:327 Kernel/(6091:6093): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 03:42:03:707 Kernel/(6091:6099): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 03:42:03:726 Kernel/(6091:6102): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 03:42:14:615 Kernel/(6091:6102): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:42:14:615 Kernel/(6091:6102): El stream es : #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end
 /n
[INFO] 03:42:14:641 Kernel/(6091:6093): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:42:14:641 Kernel/(6091:6093): Estructura:--
Pid: 1
Script: #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

SocketConsola:8


[INFO] 03:42:14:641 Kernel/(6091:6093): [memoria_dividirScriptEnPaginas] - #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 03:42:14:641 Kernel/(6091:6093): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 03:42:14:641 Kernel/(6091:6093): Envio una pagina: 0

[INFO] 03:42:14:641 Kernel/(6091:6093): La pagina 0, contiene:
[INFO] 03:42:14:641 Kernel/(6091:6093): #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 03:42:22:663 Kernel/(6091:6102): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:42:22:663 Kernel/(6091:6102): El stream es : #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end
 /n
[INFO] 03:42:22:663 Kernel/(6091:6093): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:42:22:663 Kernel/(6091:6093): Estructura:--
Pid: 2
Script: #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

SocketConsola:8


[INFO] 03:42:22:663 Kernel/(6091:6093): [memoria_dividirScriptEnPaginas] - #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 03:42:22:664 Kernel/(6091:6093): [Funcion newToReady] - No hubo espacio para guardar en memoria!

[INFO] 03:43:40:76 Kernel/(6091:6102): Murio el proceso: 1

[INFO] 03:43:40:76 Kernel/(6091:6102): Murio el proceso: 2

[INFO] 03:43:57:46 Kernel/(6091:6099): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 9


[INFO] 03:43:57:50 Kernel/(6091:6168): [Rutina rutinaConsola] - Entramos al hilo de la consola: 9!

[INFO] 03:44:03:490 Kernel/(6091:6099): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 03:44:03:508 Kernel/(6091:6172): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 03:44:09:687 Kernel/(6091:6172): Murio el proceso: 1

[INFO] 03:44:09:687 Kernel/(6091:6172): Murio el proceso: 2

[INFO] 03:44:18:140 Kernel/(6091:6099): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 9


[INFO] 03:44:18:143 Kernel/(6091:6176): [Rutina rutinaConsola] - Entramos al hilo de la consola: 9!

[INFO] 03:44:25:135 Kernel/(6091:6176): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:44:25:135 Kernel/(6091:6176): El stream es : #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end
 /n
[INFO] 03:44:25:139 Kernel/(6091:6093): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:44:25:139 Kernel/(6091:6093): Estructura:--
Pid: 3
Script: #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

SocketConsola:9


[INFO] 03:44:25:139 Kernel/(6091:6093): [memoria_dividirScriptEnPaginas] - #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 03:44:25:139 Kernel/(6091:6093): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 03:44:25:140 Kernel/(6091:6093): Envio una pagina: 0

[INFO] 03:44:25:140 Kernel/(6091:6093): La pagina 0, contiene:
[INFO] 03:44:25:140 Kernel/(6091:6093): #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 03:44:34:929 Kernel/(6091:6176): Murio el proceso: 3

[INFO] 03:53:01:88 Kernel/(6426:6429): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 03:53:01:97 Kernel/(6426:6428): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 03:53:21:45 Kernel/(6426:6434): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 03:53:21:45 Kernel/(6426:6440): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 03:53:31:752 Kernel/(6426:6440): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:53:31:752 Kernel/(6426:6440): El stream es : begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end /n
[INFO] 03:53:31:772 Kernel/(6426:6428): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:53:31:772 Kernel/(6426:6428): Estructura:--
Pid: 1
Script: begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
SocketConsola:8


[INFO] 03:53:31:772 Kernel/(6426:6428): [memoria_dividirScriptEnPaginas] - begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 03:53:31:772 Kernel/(6426:6428): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 03:53:31:772 Kernel/(6426:6428): Envio una pagina: 0

[INFO] 03:53:31:772 Kernel/(6426:6428): La pagina 0, contiene:
[INFO] 03:53:31:772 Kernel/(6426:6428): begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 03:53:34:937 Kernel/(6426:6434): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 03:53:34:943 Kernel/(6426:6444): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 03:53:34:943 Kernel/(6426:6444): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:53:36:563 Kernel/(6426:6444): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 03:53:36:563 Kernel/(6426:6444): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 03:53:36:563 Kernel/(6426:6444): Se reservan 200 bytes  en la pagina pedida.
[INFO] 03:53:36:563 Kernel/(6426:6444): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 03:53:36:563 Kernel/(6426:6444): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->210,->offset->0
[INFO] 03:53:36:563 Kernel/(6426:6444): Se almaceno correctamente los bytes en memoria.
[INFO] 03:53:36:563 Kernel/(6426:6444): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 03:53:38:729 Kernel/(6426:6444): Se removieron todos las paginas
[INFO] 03:53:38:729 Kernel/(6426:6432): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: -13

[INFO] 03:53:39:277 Kernel/(6426:6444): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 03:53:39:283 Kernel/(6426:6444): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:54:33:534 Kernel/(6455:6458): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 03:54:33:539 Kernel/(6455:6457): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 03:54:35:554 Kernel/(6455:6463): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 03:54:35:574 Kernel/(6455:6465): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 03:54:38:300 Kernel/(6455:6463): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 03:54:38:332 Kernel/(6455:6469): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 03:54:38:334 Kernel/(6455:6469): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:54:51:626 Kernel/(6455:6465): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:54:51:626 Kernel/(6455:6465): El stream es : begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end /n
[INFO] 03:54:51:631 Kernel/(6455:6457): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:54:51:631 Kernel/(6455:6457): Estructura:--
Pid: 1
Script: begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
SocketConsola:8


[INFO] 03:54:51:631 Kernel/(6455:6457): [memoria_dividirScriptEnPaginas] - begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 03:54:51:631 Kernel/(6455:6457): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 03:54:51:663 Kernel/(6455:6457): Envio una pagina: 0

[INFO] 03:54:51:663 Kernel/(6455:6457): La pagina 0, contiene:
[INFO] 03:54:51:663 Kernel/(6455:6457): begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 03:54:53:319 Kernel/(6455:6469): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 03:54:53:320 Kernel/(6455:6469): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 03:54:53:320 Kernel/(6455:6469): Se reservan 200 bytes  en la pagina pedida.
[INFO] 03:54:53:320 Kernel/(6455:6469): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 03:54:53:320 Kernel/(6455:6469): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->210,->offset->0
[INFO] 03:54:53:320 Kernel/(6455:6469): Se almaceno correctamente los bytes en memoria.
[INFO] 03:54:53:320 Kernel/(6455:6469): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 03:57:25:626 Kernel/(6685:6688): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 03:57:25:632 Kernel/(6685:6687): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 03:57:27:721 Kernel/(6685:6693): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 03:57:27:727 Kernel/(6685:6696): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 03:57:29:334 Kernel/(6685:6693): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 03:57:29:379 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 03:57:29:379 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:58:27:318 Kernel/(6685:6696): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:58:27:318 Kernel/(6685:6696): El stream es : begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end /n
[INFO] 03:58:27:324 Kernel/(6685:6687): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:58:27:339 Kernel/(6685:6687): Estructura:--
Pid: 1
Script: begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
SocketConsola:8


[INFO] 03:58:27:339 Kernel/(6685:6687): [memoria_dividirScriptEnPaginas] - begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 03:58:27:340 Kernel/(6685:6687): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 03:58:27:340 Kernel/(6685:6687): Envio una pagina: 0

[INFO] 03:58:27:340 Kernel/(6685:6687): La pagina 0, contiene:
[INFO] 03:58:27:340 Kernel/(6685:6687): begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 03:58:28:903 Kernel/(6685:6699): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 03:58:28:904 Kernel/(6685:6699): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 03:58:28:904 Kernel/(6685:6699): Se reservan 200 bytes  en la pagina pedida.
[INFO] 03:58:28:904 Kernel/(6685:6699): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 03:58:28:904 Kernel/(6685:6699): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->210,->offset->0
[INFO] 03:58:28:904 Kernel/(6685:6699): Se almaceno correctamente los bytes en memoria.
[INFO] 03:58:28:904 Kernel/(6685:6699): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 03:58:29:489 Kernel/(6685:6699): Se removieron todos las paginas
[INFO] 03:58:29:535 Kernel/(6685:6691): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: -13

[INFO] 03:58:30:33 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 03:58:30:33 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:59:06:233 Kernel/(6685:6696): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 03:59:06:233 Kernel/(6685:6696): El stream es : begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end /n
[INFO] 03:59:06:256 Kernel/(6685:6687): 


Estamos en la función newToReady a largo plazo!


[INFO] 03:59:06:256 Kernel/(6685:6687): Estructura:--
Pid: 2
Script: begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
SocketConsola:8


[INFO] 03:59:06:256 Kernel/(6685:6687): [memoria_dividirScriptEnPaginas] - begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 03:59:06:256 Kernel/(6685:6687): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 03:59:06:256 Kernel/(6685:6687): Envio una pagina: 0

[INFO] 03:59:06:257 Kernel/(6685:6687): La pagina 0, contiene:
[INFO] 03:59:06:257 Kernel/(6685:6687): begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 03:59:07:355 Kernel/(6685:6699): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 03:59:07:355 Kernel/(6685:6699): Se pide a memoria que se reserve 1 paginas para el pid 2
[INFO] 03:59:07:355 Kernel/(6685:6699): Se reservan 100 bytes  en la pagina pedida.
[INFO] 03:59:07:355 Kernel/(6685:6699): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 03:59:07:355 Kernel/(6685:6699): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->2, tamano->110,->offset->0
[INFO] 03:59:07:355 Kernel/(6685:6699): Se almaceno correctamente los bytes en memoria.
[INFO] 03:59:07:355 Kernel/(6685:6699): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 03:59:08:906 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 03:59:08:927 Kernel/(6685:6699): 
dentro de la busqueda
[INFO] 03:59:08:947 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:59:14:771 Kernel/(6685:6699): Se pide a memoria para el pid 2, la pagina 3 
[INFO] 03:59:14:771 Kernel/(6685:6699): Se acepto el pedido a memoria y se recibio la pagina pedida
[INFO] 03:59:14:771 Kernel/(6685:6699): El offset es: 5 y el HeapMetadata es: 100 tamano y esta %b como booleano 
[INFO] 03:59:14:771 Kernel/(6685:6699): Se empieza a recorrer la pagina para buscar el heapMetadata donde se pueda guardar
[INFO] 03:59:14:771 Kernel/(6685:6699): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 03:59:14:771 Kernel/(6685:6699): El HeapMetadata Siguiente es: 5 tamano y esta %b como booleano 
[INFO] 03:59:14:771 Kernel/(6685:6699): El siguiente heapMetadata estaba libre, por lo que se ajusta para evitar la fragmentacion
[INFO] 03:59:14:771 Kernel/(6685:6699): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 03:59:14:771 Kernel/(6685:6699): Se devuelve el offset 0, el tamaño libre 105 y el header, con el size 251 y booleano %b
[INFO] 03:59:14:771 Kernel/(6685:6699): Se pide almacenar para el pid 2 en la pagina 3, en el offset 0, con el siguiente tamano 5.
[INFO] 03:59:14:771 Kernel/(6685:6699): Se libero la pagina 3 del pid 2.
[INFO] 03:59:15:276 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 03:59:15:315 Kernel/(6685:6699): 
dentro de la busqueda
[INFO] 03:59:15:315 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:59:15:823 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 03:59:15:823 Kernel/(6685:6699): Se removieron todos las paginas
[INFO] 03:59:15:855 Kernel/(6685:6699): 
dentro de la busqueda
[INFO] 03:59:15:855 Kernel/(6685:6691): Se acaba de mandar a la consola n°: 8, que el proceso 2 acaba de finalizar con exit code: 0

[INFO] 03:59:15:864 Kernel/(6685:6699): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 03:59:39:912 Kernel/(6685:6696): Murio el proceso: 1

[INFO] 03:59:39:917 Kernel/(6685:6696): Murio el proceso: 2

[INFO] 04:00:04:514 Kernel/(6768:6771): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 04:00:04:519 Kernel/(6768:6770): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 04:00:06:962 Kernel/(6768:6776): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 04:00:06:979 Kernel/(6768:6780): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 04:00:20:88 Kernel/(6768:6776): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 04:00:20:144 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 04:00:20:144 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:00:22:142 Kernel/(6768:6780): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 04:00:22:142 Kernel/(6768:6780): El stream es : begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end /n
[INFO] 04:00:22:169 Kernel/(6768:6770): 


Estamos en la función newToReady a largo plazo!


[INFO] 04:00:22:169 Kernel/(6768:6770): Estructura:--
Pid: 1
Script: begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
SocketConsola:8


[INFO] 04:00:22:169 Kernel/(6768:6770): [memoria_dividirScriptEnPaginas] - begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:00:22:169 Kernel/(6768:6770): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 04:00:22:170 Kernel/(6768:6770): Envio una pagina: 0

[INFO] 04:00:22:170 Kernel/(6768:6770): La pagina 0, contiene:
[INFO] 04:00:22:170 Kernel/(6768:6770): begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:00:23:223 Kernel/(6768:6783): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 04:00:23:224 Kernel/(6768:6783): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 04:00:23:224 Kernel/(6768:6783): Se reservan 100 bytes  en la pagina pedida.
[INFO] 04:00:23:224 Kernel/(6768:6783): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 04:00:23:224 Kernel/(6768:6783): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->110,->offset->0
[INFO] 04:00:23:224 Kernel/(6768:6783): Se almaceno correctamente los bytes en memoria.
[INFO] 04:00:23:224 Kernel/(6768:6783): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 04:00:24:784 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:00:24:791 Kernel/(6768:6783): 
dentro de la busqueda
[INFO] 04:00:24:823 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:00:30:619 Kernel/(6768:6783): Se pide a memoria para el pid 1, la pagina 3 
[INFO] 04:00:30:620 Kernel/(6768:6783): Se acepto el pedido a memoria y se recibio la pagina pedida
[INFO] 04:00:30:620 Kernel/(6768:6783): El offset es: 5 y el HeapMetadata es: 100 tamano y esta %b como booleano 
[INFO] 04:00:30:620 Kernel/(6768:6783): Se empieza a recorrer la pagina para buscar el heapMetadata donde se pueda guardar
[INFO] 04:00:30:620 Kernel/(6768:6783): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:00:30:620 Kernel/(6768:6783): El HeapMetadata Siguiente es: 5 tamano y esta %b como booleano 
[INFO] 04:00:30:620 Kernel/(6768:6783): El siguiente heapMetadata estaba libre, por lo que se ajusta para evitar la fragmentacion
[INFO] 04:00:30:620 Kernel/(6768:6783): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:00:30:620 Kernel/(6768:6783): Se devuelve el offset 0, el tamaño libre 105 y el header, con el size 251 y booleano %b
[INFO] 04:00:30:620 Kernel/(6768:6783): Se pide almacenar para el pid 1 en la pagina 3, en el offset 0, con el siguiente tamano 5.
[INFO] 04:00:30:620 Kernel/(6768:6783): Se libero la pagina 3 del pid 1.
[INFO] 04:00:31:121 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:00:31:121 Kernel/(6768:6783): 
dentro de la busqueda
[INFO] 04:00:31:163 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:00:31:664 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 04:00:31:665 Kernel/(6768:6783): Se removieron todos las paginas
[INFO] 04:00:31:671 Kernel/(6768:6783): 
dentro de la busqueda
[INFO] 04:00:31:703 Kernel/(6768:6783): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:00:31:744 Kernel/(6768:6774): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 04:01:02:209 Kernel/(6768:6780): Murio el proceso: 1

[INFO] 04:05:47:595 Kernel/(6887:6890): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 04:05:47:599 Kernel/(6887:6889): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 04:05:49:666 Kernel/(6887:6895): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 04:05:49:671 Kernel/(6887:6897): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 04:05:51:295 Kernel/(6887:6895): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 04:05:51:347 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 04:05:51:347 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:01:115 Kernel/(6887:6897): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 04:06:01:115 Kernel/(6887:6897): El stream es : begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end
 /n
[INFO] 04:06:01:139 Kernel/(6887:6889): 


Estamos en la función newToReady a largo plazo!


[INFO] 04:06:01:139 Kernel/(6887:6889): Estructura:--
Pid: 1
Script: begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

SocketConsola:8


[INFO] 04:06:01:139 Kernel/(6887:6889): [memoria_dividirScriptEnPaginas] - begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

[INFO] 04:06:01:139 Kernel/(6887:6889): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 04:06:01:139 Kernel/(6887:6889): Envio una pagina: 0

[INFO] 04:06:01:139 Kernel/(6887:6889): La pagina 0, contiene:
[INFO] 04:06:01:139 Kernel/(6887:6889): begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

[INFO] 04:06:03:770 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:03:774 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:03:814 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:06:22 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:06:62 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:06:63 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:08:289 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:08:290 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:08:331 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:10:559 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:10:591 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:10:598 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:12:805 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:12:814 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:12:847 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:15:56 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:15:58 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:15:95 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:17:343 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:17:367 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:17:386 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:19:604 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:19:604 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:19:647 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:21:851 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:21:867 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:21:890 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:24:95 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:24:95 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:24:135 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:26:346 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:26:373 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:26:387 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:28:600 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:28:600 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:28:638 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:30:854 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:30:862 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:30:895 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:33:107 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:33:126 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:33:147 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:35:361 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:35:361 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:35:398 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:37:614 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:37:614 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:37:654 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:39:863 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:39:891 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:39:906 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:42:126 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:42:138 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:42:171 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:44:415 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:44:430 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:44:454 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:46:662 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:06:46:679 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:46:706 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:06:48:880 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 04:06:48:882 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:06:48:882 Kernel/(6887:6893): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 04:06:48:926 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:07:01:541 Kernel/(6887:6897): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 04:07:01:541 Kernel/(6887:6897): El stream es : begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end /n
[INFO] 04:07:01:611 Kernel/(6887:6889): 


Estamos en la función newToReady a largo plazo!


[INFO] 04:07:01:611 Kernel/(6887:6889): Estructura:--
Pid: 2
Script: begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
SocketConsola:8


[INFO] 04:07:01:611 Kernel/(6887:6889): [memoria_dividirScriptEnPaginas] - begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:07:01:611 Kernel/(6887:6889): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 04:07:01:612 Kernel/(6887:6889): Envio una pagina: 0

[INFO] 04:07:01:612 Kernel/(6887:6889): La pagina 0, contiene:
[INFO] 04:07:01:612 Kernel/(6887:6889): begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:07:02:684 Kernel/(6887:6901): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 04:07:02:685 Kernel/(6887:6901): Se pide a memoria que se reserve 1 paginas para el pid 2
[INFO] 04:07:02:685 Kernel/(6887:6901): Se reservan 100 bytes  en la pagina pedida.
[INFO] 04:07:02:685 Kernel/(6887:6901): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 04:07:02:685 Kernel/(6887:6901): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->2, tamano->110,->offset->0
[INFO] 04:07:02:685 Kernel/(6887:6901): Se almaceno correctamente los bytes en memoria.
[INFO] 04:07:02:685 Kernel/(6887:6901): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 04:07:04:239 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:07:04:268 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:07:04:279 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:07:10:77 Kernel/(6887:6901): Se pide a memoria para el pid 2, la pagina 3 
[INFO] 04:07:10:77 Kernel/(6887:6901): Se acepto el pedido a memoria y se recibio la pagina pedida
[INFO] 04:07:10:77 Kernel/(6887:6901): El offset es: 5 y el HeapMetadata es: 100 tamano y esta %b como booleano 
[INFO] 04:07:10:77 Kernel/(6887:6901): Se empieza a recorrer la pagina para buscar el heapMetadata donde se pueda guardar
[INFO] 04:07:10:77 Kernel/(6887:6901): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:07:10:77 Kernel/(6887:6901): El HeapMetadata Siguiente es: 5 tamano y esta %b como booleano 
[INFO] 04:07:10:77 Kernel/(6887:6901): El siguiente heapMetadata estaba libre, por lo que se ajusta para evitar la fragmentacion
[INFO] 04:07:10:77 Kernel/(6887:6901): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:07:10:77 Kernel/(6887:6901): Se devuelve el offset 0, el tamaño libre 105 y el header, con el size 251 y booleano %b
[INFO] 04:07:10:77 Kernel/(6887:6901): Se pide almacenar para el pid 2 en la pagina 3, en el offset 0, con el siguiente tamano 5.
[INFO] 04:07:10:78 Kernel/(6887:6901): Se libero la pagina 3 del pid 2.
[INFO] 04:07:10:582 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:07:10:582 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:07:10:627 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:07:11:140 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 04:07:11:141 Kernel/(6887:6901): Se removieron todos las paginas
[INFO] 04:07:11:141 Kernel/(6887:6901): 
dentro de la busqueda
[INFO] 04:07:11:182 Kernel/(6887:6901): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:07:11:190 Kernel/(6887:6893): Se acaba de mandar a la consola n°: 8, que el proceso 2 acaba de finalizar con exit code: 0

[INFO] 04:08:37:83 Kernel/(6995:6998): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 04:08:37:84 Kernel/(6995:6997): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 04:08:39:312 Kernel/(6995:7003): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 8


[INFO] 04:08:39:353 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 8.

[INFO] 04:08:39:373 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:08:41:973 Kernel/(6995:7003): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 9


[INFO] 04:08:41:991 Kernel/(6995:7009): [Rutina rutinaConsola] - Entramos al hilo de la consola: 9!

[INFO] 04:08:50:371 Kernel/(6995:7009): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 04:08:50:371 Kernel/(6995:7009): El stream es : begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end /n
[INFO] 04:08:50:375 Kernel/(6995:6997): 


Estamos en la función newToReady a largo plazo!


[INFO] 04:08:50:375 Kernel/(6995:6997): Estructura:--
Pid: 1
Script: begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
SocketConsola:9


[INFO] 04:08:50:375 Kernel/(6995:6997): [memoria_dividirScriptEnPaginas] - begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:08:50:375 Kernel/(6995:6997): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 04:08:50:375 Kernel/(6995:6997): Envio una pagina: 0

[INFO] 04:08:50:376 Kernel/(6995:6997): La pagina 0, contiene:
[INFO] 04:08:50:376 Kernel/(6995:6997): begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:08:51:483 Kernel/(6995:7006): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 04:08:51:483 Kernel/(6995:7006): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 04:08:51:483 Kernel/(6995:7006): Se reservan 100 bytes  en la pagina pedida.
[INFO] 04:08:51:483 Kernel/(6995:7006): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 04:08:51:483 Kernel/(6995:7006): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->110,->offset->0
[INFO] 04:08:51:483 Kernel/(6995:7006): Se almaceno correctamente los bytes en memoria.
[INFO] 04:08:51:483 Kernel/(6995:7006): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 04:08:53:40 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:08:53:62 Kernel/(6995:7006): 
dentro de la busqueda
[INFO] 04:08:53:78 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:08:58:862 Kernel/(6995:7006): Se pide a memoria para el pid 1, la pagina 3 
[INFO] 04:08:58:863 Kernel/(6995:7006): Se acepto el pedido a memoria y se recibio la pagina pedida
[INFO] 04:08:58:863 Kernel/(6995:7006): El offset es: 5 y el HeapMetadata es: 100 tamano y esta %b como booleano 
[INFO] 04:08:58:863 Kernel/(6995:7006): Se empieza a recorrer la pagina para buscar el heapMetadata donde se pueda guardar
[INFO] 04:08:58:863 Kernel/(6995:7006): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:08:58:863 Kernel/(6995:7006): El HeapMetadata Siguiente es: 5 tamano y esta %b como booleano 
[INFO] 04:08:58:863 Kernel/(6995:7006): El siguiente heapMetadata estaba libre, por lo que se ajusta para evitar la fragmentacion
[INFO] 04:08:58:863 Kernel/(6995:7006): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:08:58:863 Kernel/(6995:7006): Se devuelve el offset 0, el tamaño libre 105 y el header, con el size 251 y booleano %b
[INFO] 04:08:58:863 Kernel/(6995:7006): Se pide almacenar para el pid 1 en la pagina 3, en el offset 0, con el siguiente tamano 5.
[INFO] 04:08:58:863 Kernel/(6995:7006): Se libero la pagina 3 del pid 1.
[INFO] 04:08:59:371 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:08:59:420 Kernel/(6995:7006): 
dentro de la busqueda
[INFO] 04:08:59:420 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:08:59:938 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 04:08:59:949 Kernel/(6995:7006): Se removieron todos las paginas
[INFO] 04:08:59:949 Kernel/(6995:7006): 
dentro de la busqueda
[INFO] 04:08:59:975 Kernel/(6995:7006): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:09:00:6 Kernel/(6995:7001): Se acaba de mandar a la consola n°: 9, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 04:10:34:961 Kernel/(6995:7009): Murio el proceso: 1

[INFO] 04:10:43:311 Kernel/(7104:7107): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 04:10:43:318 Kernel/(7104:7106): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 04:10:45:103 Kernel/(7104:7112): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 04:10:45:111 Kernel/(7104:7115): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 04:10:46:590 Kernel/(7104:7112): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 04:10:46:614 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 04:10:46:614 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:10:56:675 Kernel/(7104:7115): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 04:10:56:675 Kernel/(7104:7115): El stream es : begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end /n
[INFO] 04:10:56:707 Kernel/(7104:7106): 


Estamos en la función newToReady a largo plazo!


[INFO] 04:10:56:707 Kernel/(7104:7106): Estructura:--
Pid: 1
Script: begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
SocketConsola:8


[INFO] 04:10:56:707 Kernel/(7104:7106): [memoria_dividirScriptEnPaginas] - begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:10:56:708 Kernel/(7104:7106): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 04:10:56:718 Kernel/(7104:7106): Envio una pagina: 0

[INFO] 04:10:56:718 Kernel/(7104:7106): La pagina 0, contiene:
[INFO] 04:10:56:718 Kernel/(7104:7106): begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 04:10:57:770 Kernel/(7104:7119): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 04:10:57:771 Kernel/(7104:7119): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 04:10:57:771 Kernel/(7104:7119): Se reservan 100 bytes  en la pagina pedida.
[INFO] 04:10:57:771 Kernel/(7104:7119): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 04:10:57:771 Kernel/(7104:7119): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->110,->offset->0
[INFO] 04:10:57:771 Kernel/(7104:7119): Se almaceno correctamente los bytes en memoria.
[INFO] 04:10:57:771 Kernel/(7104:7119): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 04:10:59:326 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:10:59:352 Kernel/(7104:7119): 
dentro de la busqueda
[INFO] 04:10:59:367 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:11:05:198 Kernel/(7104:7119): Se pide a memoria para el pid 1, la pagina 3 
[INFO] 04:11:05:199 Kernel/(7104:7119): Se acepto el pedido a memoria y se recibio la pagina pedida
[INFO] 04:11:05:199 Kernel/(7104:7119): El offset es: 5 y el HeapMetadata es: 100 tamano y esta %b como booleano 
[INFO] 04:11:05:199 Kernel/(7104:7119): Se empieza a recorrer la pagina para buscar el heapMetadata donde se pueda guardar
[INFO] 04:11:05:199 Kernel/(7104:7119): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:11:05:199 Kernel/(7104:7119): El HeapMetadata Siguiente es: 5 tamano y esta %b como booleano 
[INFO] 04:11:05:199 Kernel/(7104:7119): El siguiente heapMetadata estaba libre, por lo que se ajusta para evitar la fragmentacion
[INFO] 04:11:05:199 Kernel/(7104:7119): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 04:11:05:199 Kernel/(7104:7119): Se devuelve el offset 0, el tamaño libre 105 y el header, con el size 251 y booleano %b
[INFO] 04:11:05:199 Kernel/(7104:7119): Se pide almacenar para el pid 1 en la pagina 3, en el offset 0, con el siguiente tamano 5.
[INFO] 04:11:05:199 Kernel/(7104:7119): Se libero la pagina 3 del pid 1.
[INFO] 04:11:05:706 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 04:11:05:707 Kernel/(7104:7119): 
dentro de la busqueda
[INFO] 04:11:05:750 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:11:06:254 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 04:11:06:255 Kernel/(7104:7119): Se removieron todos las paginas
[INFO] 04:11:06:255 Kernel/(7104:7119): 
dentro de la busqueda
[INFO] 04:11:06:298 Kernel/(7104:7119): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 04:11:06:343 Kernel/(7104:7110): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 04:11:35:276 Kernel/(7104:7115): Murio el proceso: 1

[INFO] 05:25:30:789 Kernel/(8775:8778): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 05:25:30:795 Kernel/(8775:8777): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 05:27:23:549 Kernel/(8775:8783): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 05:27:23:549 Kernel/(8775:8859): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 05:27:38:881 Kernel/(8775:8859): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 05:27:38:881 Kernel/(8775:8859): El stream es : #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end
 /n
[INFO] 05:27:38:923 Kernel/(8775:8777): 


Estamos en la función newToReady a largo plazo!


[INFO] 05:27:38:923 Kernel/(8775:8777): Estructura:--
Pid: 1
Script: #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

SocketConsola:8


[INFO] 05:27:38:923 Kernel/(8775:8777): [memoria_dividirScriptEnPaginas] - #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 05:27:38:923 Kernel/(8775:8777): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 05:27:38:924 Kernel/(8775:8777): Envio una pagina: 0

[INFO] 05:27:38:924 Kernel/(8775:8777): La pagina 0, contiene:
[INFO] 05:27:38:924 Kernel/(8775:8777): #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 05:27:41:245 Kernel/(8775:8783): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 05:27:41:272 Kernel/(8775:8863): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 05:27:41:272 Kernel/(8775:8863): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:27:43:833 Kernel/(8775:8863): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 05:27:43:833 Kernel/(8775:8863): 
dentro de la busqueda
[INFO] 05:27:43:876 Kernel/(8775:8863): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:27:44:387 Kernel/(8775:8863): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 05:27:44:387 Kernel/(8775:8863): 
dentro de la busqueda
[INFO] 05:27:44:387 Kernel/(8775:8781): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 05:27:44:428 Kernel/(8775:8863): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:27:55:267 Kernel/(8775:8859): Murio el proceso: 1

[INFO] 05:34:56:3 Kernel/(8775:8783): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 10


[INFO] 05:34:56:34 Kernel/(8775:9001): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 10.

[INFO] 05:34:56:34 Kernel/(8775:9001): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:34:57:316 Kernel/(8775:8783): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 05:34:57:337 Kernel/(8775:9004): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 05:35:06:452 Kernel/(8775:9004): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 05:35:06:452 Kernel/(8775:9004): El stream es : #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end
 /n
[INFO] 05:35:06:471 Kernel/(8775:8777): 


Estamos en la función newToReady a largo plazo!


[INFO] 05:35:06:486 Kernel/(8775:8777): Estructura:--
Pid: 2
Script: #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

SocketConsola:8


[INFO] 05:35:06:487 Kernel/(8775:8777): [memoria_dividirScriptEnPaginas] - #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 05:35:06:487 Kernel/(8775:8777): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 05:35:06:488 Kernel/(8775:8777): Envio una pagina: 0

[INFO] 05:35:06:488 Kernel/(8775:8777): La pagina 0, contiene:
[INFO] 05:35:06:488 Kernel/(8775:8777): #!/usr/bin/ansisop
begin
variables a, b
a = 3
b = 5
a = b + 12
end

[INFO] 05:35:09:146 Kernel/(8775:9001): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 05:35:09:162 Kernel/(8775:9001): 
dentro de la busqueda
[INFO] 05:35:09:163 Kernel/(8775:8863): [Rutina rutinaCPU] - Desconecto la CPU N°: 9

[INFO] 05:35:09:186 Kernel/(8775:9001): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:35:22:160 Kernel/(8775:9004): Murio el proceso: 1

[INFO] 05:35:22:161 Kernel/(8775:9004): Murio el proceso: 2

[INFO] 05:41:03:108 Kernel/(9147:9150): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 05:41:03:116 Kernel/(9147:9149): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 05:41:16:324 Kernel/(9147:9155): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 05:41:16:342 Kernel/(9147:9157): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 05:41:20:521 Kernel/(9147:9155): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 05:41:20:524 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 05:41:20:524 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:41:33:451 Kernel/(9147:9157): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 05:41:33:451 Kernel/(9147:9157): El stream es : begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end /n
[INFO] 05:41:33:465 Kernel/(9147:9149): 


Estamos en la función newToReady a largo plazo!


[INFO] 05:41:33:465 Kernel/(9147:9149): Estructura:--
Pid: 1
Script: begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
SocketConsola:8


[INFO] 05:41:33:465 Kernel/(9147:9149): [memoria_dividirScriptEnPaginas] - begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 05:41:33:465 Kernel/(9147:9149): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 05:41:33:466 Kernel/(9147:9149): Envio una pagina: 0

[INFO] 05:41:33:466 Kernel/(9147:9149): La pagina 0, contiene:
[INFO] 05:41:33:466 Kernel/(9147:9149): begin
  variables a, f, b
  alocar a 100
  abrir f CE /archivo.bin
    b = a+4
    *b = 1095520072
    escribir f a 100
  cerrar f
  liberar a
end
[INFO] 05:41:34:582 Kernel/(9147:9162): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 05:41:34:582 Kernel/(9147:9162): Se pide a memoria que se reserve 1 paginas para el pid 1
[INFO] 05:41:34:582 Kernel/(9147:9162): Se reservan 100 bytes  en la pagina pedida.
[INFO] 05:41:34:582 Kernel/(9147:9162): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 05:41:34:582 Kernel/(9147:9162): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->1, tamano->110,->offset->0
[INFO] 05:41:34:583 Kernel/(9147:9162): Se almaceno correctamente los bytes en memoria.
[INFO] 05:41:34:583 Kernel/(9147:9162): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 05:41:36:131 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 05:41:36:138 Kernel/(9147:9162): 
dentro de la busqueda
[INFO] 05:41:36:175 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:41:41:983 Kernel/(9147:9162): Se pide a memoria para el pid 1, la pagina 3 
[INFO] 05:41:41:983 Kernel/(9147:9162): Se acepto el pedido a memoria y se recibio la pagina pedida
[INFO] 05:41:41:983 Kernel/(9147:9162): El offset es: 5 y el HeapMetadata es: 100 tamano y esta %b como booleano 
[INFO] 05:41:41:983 Kernel/(9147:9162): Se empieza a recorrer la pagina para buscar el heapMetadata donde se pueda guardar
[INFO] 05:41:41:983 Kernel/(9147:9162): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 05:41:41:983 Kernel/(9147:9162): El HeapMetadata Siguiente es: 5 tamano y esta %b como booleano 
[INFO] 05:41:41:983 Kernel/(9147:9162): El siguiente heapMetadata estaba libre, por lo que se ajusta para evitar la fragmentacion
[INFO] 05:41:41:983 Kernel/(9147:9162): El HeapMetadata a escribir es: 5 tamano y esta %b como booleano 
[INFO] 05:41:41:983 Kernel/(9147:9162): Se devuelve el offset 0, el tamaño libre 105 y el header, con el size 251 y booleano %b
[INFO] 05:41:41:983 Kernel/(9147:9162): Se pide almacenar para el pid 1 en la pagina 3, en el offset 0, con el siguiente tamano 5.
[INFO] 05:41:41:985 Kernel/(9147:9162): Se libero la pagina 3 del pid 1.
[INFO] 05:41:42:491 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 05:41:42:500 Kernel/(9147:9162): 
dentro de la busqueda
[INFO] 05:41:42:535 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:41:43:39 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 05:41:43:39 Kernel/(9147:9162): Se removieron todos las paginas
[INFO] 05:41:43:40 Kernel/(9147:9162): 
dentro de la busqueda
[INFO] 05:41:43:46 Kernel/(9147:9153): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 05:41:43:78 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:42:13:191 Kernel/(9147:9157): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 05:42:13:191 Kernel/(9147:9157): El stream es : begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end /n
[INFO] 05:42:13:211 Kernel/(9147:9149): 


Estamos en la función newToReady a largo plazo!


[INFO] 05:42:13:211 Kernel/(9147:9149): Estructura:--
Pid: 2
Script: begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
SocketConsola:8


[INFO] 05:42:13:211 Kernel/(9147:9149): [memoria_dividirScriptEnPaginas] - begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 05:42:13:212 Kernel/(9147:9149): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 05:42:13:212 Kernel/(9147:9149): Envio una pagina: 0

[INFO] 05:42:13:212 Kernel/(9147:9149): La pagina 0, contiene:
[INFO] 05:42:13:212 Kernel/(9147:9149): begin
 variables a, b
 abrir b LC /archivo.bin
 alocar a 200
 leer b a 10
 prints s a
 #Sin cerrarlo
end
[INFO] 05:42:14:884 Kernel/(9147:9162): No tiene paginas de heap. Se procede a pedir una pagina.
[INFO] 05:42:14:885 Kernel/(9147:9162): Se pide a memoria que se reserve 1 paginas para el pid 2
[INFO] 05:42:14:885 Kernel/(9147:9162): Se reservan 200 bytes  en la pagina pedida.
[INFO] 05:42:14:885 Kernel/(9147:9162): Se escribe el heapMetadata que informa cuanto tamaño queda (el ultimo)
[INFO] 05:42:14:885 Kernel/(9147:9162): Se envia a memoria el siguiente pedido de escritura: Pagina-> 3, Pid->2, tamano->210,->offset->0
[INFO] 05:42:14:886 Kernel/(9147:9162): Se almaceno correctamente los bytes en memoria.
[INFO] 05:42:14:886 Kernel/(9147:9162): Se añade la pagina a la tabla de heap, y se retorna el offset de la variable pedida.
[INFO] 05:42:15:974 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 05:42:15:992 Kernel/(9147:9162): 
dentro de la busqueda
[INFO] 05:42:16:15 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:42:17:267 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 05:42:17:267 Kernel/(9147:9162): Se removieron todos las paginas
[INFO] 05:42:17:355 Kernel/(9147:9162): 
dentro de la busqueda
[INFO] 05:42:17:355 Kernel/(9147:9162): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 05:42:17:363 Kernel/(9147:9153): Se acaba de mandar a la consola n°: 8, que el proceso 2 acaba de finalizar con exit code: 0

[INFO] 05:50:47:331 Kernel/(9147:9157): Murio el proceso: 1

[INFO] 05:50:47:331 Kernel/(9147:9157): Murio el proceso: 2

[INFO] 06:33:38:315 Kernel/(9848:9851): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 06:33:38:335 Kernel/(9848:9850): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 06:33:43:172 Kernel/(9848:9856): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 06:33:43:178 Kernel/(9848:9859): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 06:33:54:767 Kernel/(9848:9859): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 06:33:54:767 Kernel/(9848:9859): El stream es : begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end
 /n
[INFO] 06:33:54:796 Kernel/(9848:9850): 


Estamos en la función newToReady a largo plazo!


[INFO] 06:33:54:797 Kernel/(9848:9850): Estructura:--
Pid: 1
Script: begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

SocketConsola:8


[INFO] 06:33:54:797 Kernel/(9848:9850): [memoria_dividirScriptEnPaginas] - begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

[INFO] 06:33:54:797 Kernel/(9848:9850): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 06:33:54:804 Kernel/(9848:9850): Envio una pagina: 0

[INFO] 06:33:54:804 Kernel/(9848:9850): La pagina 0, contiene:
[INFO] 06:33:54:804 Kernel/(9848:9850): begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

[INFO] 06:34:07:494 Kernel/(9848:9856): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 06:34:07:562 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 06:34:07:562 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:10:156 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:10:156 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:10:194 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:12:465 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:12:482 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:12:522 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:14:776 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:14:780 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:14:819 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:17:43 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:17:43 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:17:104 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:19:313 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:19:313 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:19:362 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:21:573 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:21:615 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:21:615 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:23:861 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:23:862 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:24:38 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:26:294 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:26:294 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:26:339 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:28:646 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:28:646 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:28:693 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:30:921 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:30:921 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:30:966 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:33:214 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:33:218 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:33:275 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:35:528 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:35:582 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:35:582 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:37:803 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:37:807 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:37:852 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:40:68 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:40:119 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:40:119 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:42:412 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:42:506 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:42:506 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:44:845 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:44:863 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:44:909 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:47:133 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:47:133 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:47:174 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:49:407 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:49:443 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:49:530 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:51:817 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:51:834 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:51:856 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:54:199 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:34:54:238 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:54:286 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:34:56:573 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 06:34:56:594 Kernel/(9848:9864): 
dentro de la busqueda
[INFO] 06:34:56:595 Kernel/(9848:9854): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 06:34:56:616 Kernel/(9848:9864): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:49:29:827 Kernel/(10163:10166): 
[Rutina planificadorCortoPlazo] - Entramos al planificador de corto plazo!

[INFO] 06:49:29:831 Kernel/(10163:10165): 
[rutina estadoNEW] - Entramos al planificador de largo plazo!

[INFO] 06:49:32:694 Kernel/(10163:10171): 
[rutina aceptarConexiones] - Nueva Consola Conectada!
Socket Consola 8


[INFO] 06:49:32:698 Kernel/(10163:10174): [Rutina rutinaConsola] - Entramos al hilo de la consola: 8!

[INFO] 06:49:40:345 Kernel/(10163:10174): [Rutina rutinaConsola] - Nuevo script recibido!

[INFO] 06:49:40:345 Kernel/(10163:10174): El stream es : begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end
 /n
[INFO] 06:49:40:393 Kernel/(10163:10165): 


Estamos en la función newToReady a largo plazo!


[INFO] 06:49:40:393 Kernel/(10163:10165): Estructura:--
Pid: 1
Script: begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

SocketConsola:8


[INFO] 06:49:40:393 Kernel/(10163:10165): [memoria_dividirScriptEnPaginas] - begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

[INFO] 06:49:40:394 Kernel/(10163:10165): 

[Funcion consola_recibirScript] - Memoria dio el Ok para el proceso recien enviado: Ok-1

[INFO] 06:49:40:394 Kernel/(10163:10165): Envio una pagina: 0

[INFO] 06:49:40:394 Kernel/(10163:10165): La pagina 0, contiene:
[INFO] 06:49:40:394 Kernel/(10163:10165): begin
variables f, i, t
#`i`: Iterador
i=0
#`f`: Hasta donde contar
f=20
:inicio
#Incrementar el iterador
i=i+1
#Imprimir el contador
prints n i
#`t`: Comparador entre `i` y `f`
t=f-i
#De no ser iguales, salta a inicio
jnz t inicio
end

[INFO] 06:49:52:973 Kernel/(10163:10171): 
[rutina aceptarConexiones] - Nueva CPU Conectada
Socket CPU 9


[INFO] 06:49:53:42 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al hilo de la CPU cuyo socket es: 9.

[INFO] 06:49:53:42 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:49:55:598 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:49:55:650 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:49:55:650 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:49:57:897 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:49:57:950 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:49:57:967 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:00:235 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:00:235 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:00:280 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:02:491 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:02:498 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:02:547 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:04:804 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:04:804 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:04:842 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:07:102 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:07:169 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:07:169 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:09:548 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:09:598 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:09:598 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:11:910 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:11:911 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:11:980 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:14:240 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:14:247 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:14:374 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:16:631 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:16:631 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:16:671 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:18:926 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:18:929 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:18:984 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:21:356 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:21:446 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:21:447 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:23:685 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:23:685 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:23:742 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:26:390 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:26:468 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:26:468 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:28:731 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:28:787 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:28:788 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:31:4 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:31:14 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:31:70 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:33:376 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:33:394 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:33:418 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:35:636 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:35:636 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:35:686 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:37:989 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:38:8 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:38:41 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:40:260 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU se quedo sin quamtum y el proceso pasa a ready: accion- 105!

[INFO] 06:50:40:263 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:40:298 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:50:42:497 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU termino la ejecucion de un proceso: accion- 104!

[INFO] 06:50:42:515 Kernel/(10163:10178): 
dentro de la busqueda
[INFO] 06:50:42:515 Kernel/(10163:10169): Se acaba de mandar a la consola n°: 8, que el proceso 1 acaba de finalizar con exit code: 0

[INFO] 06:50:42:535 Kernel/(10163:10178): [Rutina rutinaCPU] - Entramos al Caso de que CPU pide un pcb: accion- 103!

[INFO] 06:56:45:272 Kernel/(10163:10174): Murio el proceso: 1

